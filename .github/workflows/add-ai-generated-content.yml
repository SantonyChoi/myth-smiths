name: Add AI-generated content

on:
  pull_request:
    paths:
      - "drafts/*.md"
    types:
      - opened
      - synchronize

jobs:
  add_ai_generated_content:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install openai pyyaml requests

      - name: Check for [TRANSLATE] and [GENERATE] in commit messages
        id: check_translate
        run: |
          commit_message=$(git log -2 --pretty=format:"%s" | tail -n 1)
          echo "Last commit message: $commit_message"
          if echo "$commit_message" | grep -q '\[TRANSLATE\]'; then
            echo "TRANSLATE=true"
            echo "TRANSLATE=true" >> $GITHUB_ENV
            file_to_translate=$(echo "$commit_message" | grep -o 'drafts/[^ ]*')
            echo "file_to_translate=$file_to_translate" >> $GITHUB_ENV
          else
            echo "TRANSLATE=false"
            echo "file_to_translate=" >> $GITHUB_ENV
          fi

          if echo "$commit_message" | grep -q '\[GENERATE\]'; then
            echo "GENERATE=true"
            echo "GENERATE=true" >> $GITHUB_ENV
            file_to_generate=$(echo "$commit_message" | grep -o 'drafts/[^ ]*')
            echo "file_to_generate=$file_to_generate" >> $GITHUB_ENV
          else
            echo "GENERATE=false"
            echo "file_to_generate=" >> $GITHUB_ENV
          fi

      - name: Get the latest modified markdown file
        if: env.TRANSLATE == 'true'
        id: get_latest_file
        run: |
          latest_file=$(git diff --name-only origin/main | grep 'drafts/.*\.md$' | grep -v '_en\.md$' | tail -n 1)
          echo "latest_file=$latest_file" >> $GITHUB_ENV

      - name: Translate Markdown
        if: env.TRANSLATE == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -n "${{ env.file_to_translate }}" ]; then
            python scripts/translate_md.py ${{ env.file_to_translate }}
          else
            echo "No markdown file specified"
            exit 0
          fi

      - name: Commit and push changes
        if: env.TRANSLATE == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        run: |
          git config --global user.name 'myth-smiths-bot'
          git config --global user.email 'santony.choi+myth-smiths-bot@gmail.com'
          git add .
          git commit -m 'Create translation'
          git push origin HEAD:${{ github.head_ref }}

      - name: Get the latest modified markdown file
        if: env.GENERATE == 'true'
        id: get_latest_en_file
        run: |
          latest_en_file=$(git diff --name-only origin/main | grep 'drafts/.*_en\.md$' | tail -n 1)
          echo "latest_en_file=$latest_en_file" >> $GITHUB_ENV

      - name: Generate image and update Markdown
        if: env.GENERATE == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -n "${{ env.file_to_generate }}" ]; then
            python scripts/generate_image_and_update_md.py ${{ env.file_to_generate }}
          else
            echo "No markdown file specified"
            exit 0
          fi

      - name: Commit and push changes
        if: env.GENERATE == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'myth-smiths-bot'
          git config --global user.email 'santony.choi+myth-smiths-bot@gmail.com'
          git add .
          git commit -m 'Gererate image to draft'
          git push origin HEAD:${{ github.head_ref }}
