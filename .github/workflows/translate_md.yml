name: Translate Episode

on:
  pull_request:
    paths:
      - "drafts/*.md"
    types:
      - opened
      - synchronize

jobs:
  translate_episode:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install openai pyyaml

      - name: Check for [TRANSLATE] in commit messages
        id: check_translate
        run: |
          if git log --oneline -n 1 | grep -q '\[TRANSLATE\]'; then
            echo "TRANSLATE=true"
            echo "TRANSLATE=true" >> $GITHUB_ENV
          else
            echo "TRANSLATE=false"
            echo "TRANSLATE=false" >> $GITHUB_ENV
          fi

      - name: Get the latest modified markdown file
        if: env.TRANSLATE == 'true'
        id: get_latest_file
        run: |
          latest_file=$(git diff --name-only origin/main | grep 'drafts/.*\.md$' | grep -v '_en\.md$' | tail -n 1)
          echo "latest_file=$latest_file" >> $GITHUB_ENV

      - name: Translate Markdown
        if: env.TRANSLATE == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/translate_md.py ${{ env.latest_file }}

      - name: Commit and push changes
        if: env.TRANSLATE == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        run: |
          git config --global user.name 'myth-smiths-bot'
          git config --global user.email 'santony.choi+myth-smiths-bot@gmail.com'
          git add .
          git commit -m 'Add translated episode'
          git push origin HEAD:${{ github.head_ref }}

      - name: Check for [GENERATE] in commit messages
        id: check_generate
        run: |
          if git log --oneline -n 1 | grep -q '\[GENERATE\]'; then
            echo "GENERATE=true"
            echo "GENERATE=true" >> $GITHUB_ENV
          else
            echo "GENERATE=false"
            echo "GENERATE=false" >> $GITHUB_ENV
          fi

      - name: Get the latest modified markdown file
        id: get_latest_en_file
        run: |
          latest_en_file=$(git diff --name-only origin/main | grep 'drafts/.*\.md$' | grep -v '_en\.md$' | tail -n 1)
          echo "latest_en_file=$latest_en_file" >> $GITHUB_ENV

      - name: Generate image and update Markdown
        if: env.GENERATE == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -n "${{ env.latest_en_file }}" ]; then
            python scripts/generate_image_and_update_md.py ${{ env.latest_en_file }}
          else
            echo "No markdown file changed"
            exit 0
          fi

      - name: Commit and push changes
        if: env.GENERATE == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'myth-smiths-bot'
          git config --global user.email 'santony.choi+myth-smiths-bot@gmail.com'
          git pull
          git add .
          git commit -m 'Add generated image to draft' || echo "No changes to commit"
          git push origin HEAD:${{ github.head_ref }}
